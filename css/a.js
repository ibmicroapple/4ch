(function(){ if(typeof window.AdGlare == 'undefined') { window.AdGlare = { _head: document.head || document.getElementsByTagName('head')[0] || document.documentElement, _zonerefresh: [], _winID: Math.round(Math.random()*100000), _crIDsLoaded: [], _queue: [], _queueStatus: 0, _queueTimer: null, loadJS: function(url) { var r = ''; try {r = encodeURIComponent(top.location.href);} catch(e) {r = '';} var screen = ''; try {screen = (window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth) + 'x' + (window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight);} catch(e) {} var framed = AdGlare.inIframe() ? 1 : 0; var add = '&winID=' + AdGlare._winID + '&screen=' + screen + '&framed=' + framed + '&vb=' + AdGlare.VBMeasurable() + '&crIDsLoaded=' + AdGlare._crIDsLoaded.join('-') + '&referer=' + r; var s = document.createElement('script'); s.type = 'text/javascript'; s.async = true; s.src = url + add; AdGlare._head.appendChild(s); }, loadQueue: function(url) { AdGlare._queue.push(url); AdGlare.continueQueue(); }, nextQueue: function() { window.clearTimeout(AdGlare._queueTimer); AdGlare._queueStatus = 0; AdGlare.continueQueue(); }, continueQueue: function() { if(AdGlare._queueStatus != 0 || AdGlare._queue.length == 0) return; AdGlare._queueStatus = 1; AdGlare.loadJS(AdGlare._queue.shift()); /*AdGlare._queueTimer = window.setTimeout(function(){ AdGlare.nextQueue(); },1000);*/ }, addCSS: function(css) { if(css=='') return; var c = document.createElement('style'); c.type = 'text/css'; c.innerHTML = css; AdGlare._head.appendChild(c); }, loadPixel: function (url, elem) { try { var i = document.createElement(elem); i.width = '1'; i.height = '1'; i.style.display = 'none'; i.src = url; AdGlare._head.appendChild(i); } catch(e) {} }, loadTrackingPixels: function(t) { try { var i; for(i in t) { this.loadPixel(t[i].url, t[i].elem); } } catch(e) {} }, loadAdGlareCallback: function(callbackData) { if(!callbackData) return; try { if(window[callbackData.functionName]) { window[callbackData.functionName](callbackData.data); } } catch(e) {} }, setHTML: function(html,zID) { var obj = document.getElementById('zone'+zID); if(!obj) return; obj.innerHTML = html; }, appendToContainer: function(id,html) { var obj = document.getElementById(id); if(!obj) return; obj.innerHTML = ''; obj.appendChild(html); }, refreshZone: function(url,zID,timeout,max) { setTimeout(function(){ AdGlare._zonerefresh[zID] = (AdGlare._zonerefresh[zID]+1) || 1; if(AdGlare._zonerefresh[zID] > max) return; AdGlare.loadJS(url); }, timeout); }, getIframeDoc: function(id) { var o = document.getElementById(id); if(!o) return false; var d = o.contentDocument ? o.contentWindow.document : o.contentDocument || o.document; return d; }, writeToIframe: function(id,content) { var d = this.getIframeDoc(id); if(!d) return false; d.open(); d.write(content); d.close(); return true; }, hideElement: function(id) { try { for(i=0; i<3; i++) { if(i==0) var o = document.getElementById(id); if(i==1) var o = parent.document.getElementById(id); if(i==2) var o = parent.parent.document.getElementById(id); if(!o) continue; o.style.display = 'none'; if(o.parentNode) o.parentNode.removeChild(o); } } catch(e) {} }, inIframe: function() { try { return window.self !== window.top; } catch (e) { return true; } }, VBMeasurable: function() { var a = true; var b = ((document.visibilityState) ? true : false); var c = ((this.inIframe()) ? false : true); return ((a && b && c) ? 1 : 0); }, CL_timers: [], CL_urls: [], CL_done: [], CLInit: function(ifrmID,token,redirect_url,autoClickTracking) { AdGlare.CL_urls[token] = redirect_url; AdGlare.CL_timers[token] = window.setInterval(function(){AdGlare.CLMeasure(ifrmID,token,autoClickTracking);},1000); }, CLMeasure: function(ifrmID,token,autoClickTracking) { try { var elem = document.activeElement; if(elem && elem.tagName == 'IFRAME'){ if(elem.id == ifrmID) { if(!AdGlare.CL_done[token]) { AdGlare.CL_done[token] = 1; window.clearInterval(AdGlare.CL_timers[token]); if(autoClickTracking==true) AdGlare.loadPixel(AdGlare.CL_urls[token]+'&log=1','img'); AdGlare.CLCallbackFire(token); } } } } catch(e) {} }, CLCallback_clickPixels: [], CLCallback_done: [], CLSetClickPixels: function(token,clickPixels) { if(clickPixels=='') return; AdGlare.CLCallback_clickPixels[token] = clickPixels; }, CLCallbackFire: function(token) { if(!AdGlare.CLCallback_done[token]) { AdGlare.CLCallback_done[token] = 1; if(AdGlare.CLCallback_clickPixels[token]!==undefined && AdGlare.CLCallback_clickPixels[token]!='') { try { for(i in AdGlare.CLCallback_clickPixels[token]) { AdGlare.loadPixel(AdGlare.CLCallback_clickPixels[token][i].url, AdGlare.CLCallback_clickPixels[token][i].elem); } } catch(e) {} } } } }}})();
(function(){ if(typeof window.AdGlareVis == 'undefined') { window.AdGlareVis = { hasLoaded: [], delayChecks: [], visBlock: function(zID,func) { var obj = document.getElementById('zone'+zID); if(!obj) { window.setTimeout(function(){ AdGlareVis.visBlock(zID, func); },100); return; } if(window.addEventListener) { a = ['scroll','load','resize','touchmove']; for(i in a) window.addEventListener(a[i], function(){AdGlareVis.visCallback(obj,zID,func);}, false); } else if(window.attachEvent) { a = ['onscroll','onload','onresize','ontouchmove']; for(i in a) window.attachEvent(a[i], function(){AdGlareVis.visCallback(obj,zID,func);}); } this.visCallback(obj,zID,func); }, visCallback: function(obj,zID,func) { if(AdGlareVis.delayChecks[zID]==1) { window.setTimeout(function(){ AdGlareVis.visCallback(obj,zID,func); },110); return false; } try { AdGlareVis.delayChecks[zID]=1; window.setTimeout(function(){ AdGlareVis.delayChecks[zID]=0; },100); if(this.hasLoaded[zID] == true) return; if(this.isVisible(obj) || AdGlare.inIframe()) { this.hasLoaded[zID] = true; func(); } } catch(e) { return true; } }, isVisible: function(el) { var rect = el.getBoundingClientRect(), view = {height: window.innerHeight, width: window.innerWidth}; if (!this.isInViewport(rect, view) || !this.isVisibleByStyling(el)) return !1; return !0; }, percentage: function(el) { if(this.isVisible===false) return 0; var rect = el.getBoundingClientRect(), view = {height: window.innerHeight, width: window.innerWidth}, vh, vw; var res = (rect.top >= 0 ? vh = Math.min(rect.height, view.height - rect.top) : rect.bottom > 0 && (vh = Math.min(view.height, rect.bottom)),rect.left >= 0 ? vw = Math.min(rect.width, view.width - rect.left) : rect.right > 0 && (vw = Math.min(view.width, rect.right)), vh * vw / (rect.height * rect.width)); if(isNaN(res)) return 0; if(res<0) res = 0; return Math.round(res*100); }, isVisibleByStyling: function(el) { if (!el || !el.parentNode) return !1; var style = this.computedStyle(el), vis = this.styleProperty(style, 'visibility'); return 'hidden' === vis || 'collapse' === vis ? !1 : this.isDisplayed(el, style); }, isInViewport: function(rect, viewport) { return !rect || rect.width < 0 || rect.height < 0 ? !1 : rect.bottom > 0 && rect.right > 0 && rect.top < viewport.height && rect.left < viewport.width; }, computedStyle: function(el) { return window.getComputedStyle(el, null); }, styleProperty: function(style, property) { return style.getPropertyValue(property); }, isDisplayed: function(el, style) { style || (style = this.computedStyle(el)); var display = this.styleProperty(style, 'display'); if ('none' === display) return !1; var parent = el.parentNode; return (parent && 1 === parent.nodeType) ? this.isDisplayed(parent) : !0; }, VB_timers: [], VB_data: [], VB_token: [], VB_done: [], VBInit: function(zID,token) { var obj = document.getElementById('zone'+zID); if(!obj) return; AdGlareVis.VB_token[zID] = token; AdGlareVis.VB_timers[zID] = window.setInterval(function(){AdGlareVis.VBMeasure(zID,token);},1000); }, VBMeasure: function(zID,token) { var obj = document.getElementById('zone'+zID); if(!obj) return; var p = AdGlareVis.percentage(obj); var v = AdGlareVis.isVisible(obj); if(window.AdGlareAlwaysOnScreen) if(AdGlareAlwaysOnScreen._data.zID==1) {p = 100; v=true;} var s = document.visibilityState; if(!s) return; if(AdGlareVis.VB_data[zID]) { if(p>=50 && v==true && s=='visible') { if(AdGlareVis.VB_data[zID].perc>=50 && AdGlareVis.VB_data[zID].vis==true && AdGlareVis.VB_data[zID].state=='visible') { if(!AdGlareVis.VB_done[token]) { if(AdGlareVis.VB_token[zID]) { AdGlareVis.VB_done[token] = 1; window.clearInterval(AdGlareVis.VB_timers[zID]); AdGlare.loadPixel('//utraffic.engine.adglare.net/vb?data='+AdGlareVis.VB_token[zID],'img'); return; } } } } } AdGlareVis.VB_data[zID] = {'perc':p,'vis':v,'state':s}; } }}})();
AdGlare.loadJS('//utraffic.engine.adglare.net/?422617483&t=1&tt=1516752796-a58ae1ea');
